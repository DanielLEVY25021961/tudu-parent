<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    <!-- implémentation de recherche SQL -->
    <bean id="lookupStrategy"
        class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
        <constructor-arg ref="dataSource" />
        <constructor-arg ref="aclCache" />
        <constructor-arg>
            <bean
                class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
                <!-- droits de modification des ACL -->
                <constructor-arg>                    
                    <list>
                        <ref local="roleAdmin" />
                        <ref local="roleAdmin" />
                        <ref local="roleAdmin" />
                    </list>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean
                class="org.springframework.security.acls.domain.ConsoleAuditLogger" />
        </constructor-arg>
    </bean>
    <!-- fin implémentation de recherche SQL -->
    
    <bean id="roleAdmin" class="org.springframework.security.GrantedAuthorityImpl">
        <constructor-arg value="ROLE_ADMIN" />
    </bean>
    
    <!-- service de gestion des ACL -->
    <bean id="aclService"
        class="org.springframework.security.acls.jdbc.JdbcMutableAclService">
        <constructor-arg ref="dataSource" />
        <constructor-arg ref="lookupStrategy" />
        <constructor-arg ref="aclCache" />
    </bean>
    <!-- fin service de gestion des ACL -->
    
    
    <!-- gestion du cache -->
    <bean id="aclCache"
        class="org.springframework.security.acls.jdbc.EhCacheBasedAclCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean
                        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
                </property>
                <property name="cacheName" value="aclCache" />
            </bean>
        </constructor-arg>
    </bean>
    <!-- fin gestion du cache -->
    
    <!-- voteur pour la suppression d'un todo -->
    <bean id="aclMessageUpdateVoter" class="org.springframework.security.vote.AclEntryVoter">
        <constructor-arg ref="aclService" />
        <constructor-arg value="ACL_TODO_DELETE" />
        <constructor-arg>
            <list>
                <ref local="PERMISSION_ADMINISTRATION" />
                <ref local="PERMISSION_DELETE" />
            </list>
        </constructor-arg>
        <property name="processDomainObjectClass" value="tudu.security.acl.AclTodo" />
    </bean>
    
    <bean id="aclAccessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.vote.RoleVoter" />
                <ref local="aclMessageUpdateVoter" />
            </list>
        </property>
    </bean>
    
    <security:global-method-security access-decision-manager-ref="aclAccessDecisionManager" secured-annotations="enabled"/>   
    
    
    <bean id="afterAclRead" class="org.springframework.security.afterinvocation.AclEntryAfterInvocationProvider">
        <security:custom-after-invocation-provider />
        <constructor-arg ref="aclService" />
        <constructor-arg>
            <list>
                <ref local="PERMISSION_ADMINISTRATION" />
            </list>
        </constructor-arg>
    </bean>
  
  


    <bean id="afterAclCollectionRead"
        class="org.springframework.security.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider">
        <security:custom-after-invocation-provider />
        <constructor-arg ref="aclService" />
        <constructor-arg>
            <list>
                <ref local="PERMISSION_ADMINISTRATION" />
            </list>
        </constructor-arg>
    </bean>

    
    
    <!-- masques -->
    <util:constant id="PERMISSION_ADMINISTRATION"
        static-field="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>
        
    <util:constant id="PERMISSION_CREATE"
        static-field="org.springframework.security.acls.domain.BasePermission.CREATE"/>
        
    <util:constant id="PERMISSION_DELETE"
        static-field="org.springframework.security.acls.domain.BasePermission.DELETE"/>
        
    <util:constant id="PERMISSION_READ"
        static-field="org.springframework.security.acls.domain.BasePermission.READ"/>
        
    <util:constant id="PERMISSION_WRITE"
        static-field="org.springframework.security.acls.domain.BasePermission.WRITE"/>                
        
    
    <!-- fin masques -->

</beans>