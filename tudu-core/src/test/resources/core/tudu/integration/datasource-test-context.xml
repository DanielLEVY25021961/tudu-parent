<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
       
    <bean id="mysqlDataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
            <property name="driverClassName" value="com.mysql.jdbc.Driver" />
            <property name="url" value="jdbc:mysql://localhost:3306/tudu?characterEncoding=UTF-8" />
            <property name="username" value="root" />
            <property name="password" value="" />
            <property name="suppressClose" value="true" />
    </bean>
    
    <bean id="hsqldbDataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
            <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
            <property name="url" value="jdbc:hsqldb:mem:tudu" />
            <property name="username" value="sa" />
            <property name="password" value="" />
            <property name="suppressClose" value="true" />
    </bean>   
      
    <bean id="dataSourceFactory" class="tudu.domain.configuration.DataSourceFactory" init-method="init">
        <property name="jndiDatasourceName" value="jdbc/tudu" />
        <property name="mysqlDataSource" ref="mysqlDataSource" />
        <property name="hsqldbDataSource" ref="hsqldbDataSource" />
    </bean>
    
    <bean id="dataSource" factory-bean="dataSourceFactory" factory-method="getDataSource" />       
    
    <bean id="jpaVendorAdapter" factory-bean="dataSourceFactory" factory-method="getHibernateJpaVendorAdapter"/>
    
    <util:properties id="jpaProperties">
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
        <prop key="hibernate.cache.use_query_cache">false</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
    </util:properties> 
	
</beans>